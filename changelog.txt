*20130501.2
- fix in Python example_script.py. getfingerprint call used native resolution Lt and Ls rather than (optionally) interpolated LtFpRes and LsFpRes.



*Version 20130501.1
- The reference article can now be cited:
-- Simis, S. G. H., and J. Olsson. 2013. Unattended processing of shipborne hyperspectral reflectance measurements. Remote Sens. Environ. 135: 202–212. [doi: 10.1016/j.rse.2013.04.001]

- The fingerprint identification code (rho_fingerprint_getfingerprint.m) has been updated:
-- more robust exclusion of edges of spectrum, including edges that have NaN values. 
-- Stricter separation of multiple features in close proximity of each other. Only dominant features will be selected within each 'featureseparator' interval. 'featureseparator' is defined as a function argument as a number of spectral channels. A number equivalent to 10-15 nm bands is recommended. 
-- It is expected that these changes will result in less variation in identified features between consecutive samples. It is also likely that the number of identified features will decrease slightly, but results should be more robust.

- The example code was updated to reflect the above changes.
- The code was tested on the example data set and other data sets. 

- The code has been ported to Python and was verified against the Matlab code. 
- The git respository was sorted into Matlab and Python sections (sorry for the mess)

OLDER VERSIONS:
*Version 20130410.1
The journal article describing this method is now in press. References updated:
Simis, S.G.H. and J. Olsson. Unattended processing of shipborne hyperspectral reflectance measurements. Remote Sensing of Environment, In press (Apr 2013).

The fingerprint code is now available from a public git repository: 
To browse: http://sourceforge.net/p/rflex/fingerprint/ 
To pull: git clone git://git.code.sf.net/p/rflex/fingerprint rflex-fingerprint

To contribute code, please send me a message at stefan.simis@environment.fi

Fixes and improvements: 
file: rho_fingerprint_getfingerprint.m
- no changes

file: rho_fingerprint_optimize.m
- improved annotation, no functional changes

file: example_script.m
fixes:
- fixed error in final calculation of Rrs (bug in version 20121029.1)

changes:
- Raise new 'Empty' flag when fingerprint identification function returns no indices in the example script.

- Better support for sensors with narrow (< 2nm) channel intervals. 'Bandwidth' and 'featureseparator' are dynamically set and should be close to optimal for a wider range of hyperspectral sensors. Each spectrum can be interpolated on the fly onto a 2-nm grid so that slight differences in fingerprint band positions do not disqualify useful features. The optimization is still carried out on the original ('native') spectral resolution. The variable 'fingerprint_res' can be changed to the desired resolution for the fingerprint identification step. A value of 2 nm or wider is recommended - experiment! The procedure is ignored if 'fingerprint_res' is set equal to the native resolution. Extensively tested with WISP-3 measurements. 

- Exclusion of spectral regions (e.g. around the oxygen band, and edges of the spectrum where calibration might be poor) is now done *after* the identification of fingerprint bands. This is more robust when features are identified in the vicinity of these edges. 

- The exclusion of spectral regions is now based on a definition of the EXcluded rather than INcluded spectral regions.

*Version 20121029.1
- first release: include example script, improved annotations
Bugs:
- Line 103: Calculation of Rrs in example_script contains an error (Lt-rho*Lt)/Ed instead of (Lt-rho*Ls)/Ed; (Thanks Jenny)
- Line 88: verbose output gives a concatenation error if the wavelength grid is given as a row instead of a column. 

